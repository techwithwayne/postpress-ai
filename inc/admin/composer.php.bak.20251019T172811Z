<?php
/**
 * Composer admin UI for PostPress AI
 *
 * CHANGE LOG
 * 2025-10-17 — Rebuilt composer.php to match the earlier dark composer layout (two-column).
 * 2025-10-18 — CHANGED: updated markup to use uploaded CSS class names (.ppa-composer-wrap, .ppa-form-panel, .ppa-preview-panel, .ppa-btn-*)
 * 2025-10-18 — CHANGED: enforce two-column left-form / right-preview layout using inline flex styles to match pluginInterface.png
 * 2025-10-18 — CHANGED: removed duplicate top-row composer controls and forced centered container + left-card dominant layout to match RIGHT.PNG
 * 2025-10-19 — CHANGED: defensive DOM cleanup — remove stray legacy elements (ppa-preview-pane, ppa-composer-toolbar, external .ppa-tabs) injected by other code or stale cache.
 * 2025-10-20 — CHANGED: add server-side output-buffer filter for the PostPress AI admin page to strip any literal <div id="ppa-preview-pane"...>...</div> before sending HTML to browser (prevents white box flash).
 *
 * Rationale:
 * - Some legacy emitter prints a plain white preview box (id="ppa-preview-pane") outside our intended markup. Removing it server-side prevents layout flashes and ensures page matches RIGHT.PNG.
 *
 * Notes:
 * - This file performs an admin_head/admin_footer output buffering only for the PostPress AI admin screen and strips the target div via regex.
 * - Also keeps defensive client-side removals to cover edge-cases.
 */

// Prevent direct access
defined( 'ABSPATH' ) || exit;

// CHANGED: start server-side defensive buffer handlers (only active on the PostPress AI admin screen)
if ( ! function_exists( 'ppa_admin_output_buffer_start' ) ) {
	/**
	 * Start output buffering for the PostPress AI admin page so we can strip legacy markup before sending to browser.
	 * Runs early in admin_head.
	 */
	function ppa_admin_output_buffer_start() { // CHANGED:
		if ( ! is_admin() ) {
			return;
		}
		// get_current_screen may not be available at very early hooks; guard carefully
		if ( function_exists( 'get_current_screen' ) ) {
			$screen = get_current_screen();
			// typical screen id for top-level menu page: toplevel_page_{menu_slug}
			if ( $screen && isset( $screen->id ) && 'toplevel_page_postpress-ai' === $screen->id ) {
				if ( function_exists( 'error_log' ) ) {
					error_log( 'PPA: starting output buffer for PostPress AI admin page' ); // CHANGED:
				}
				@ob_start();
			}
		}
	}
	add_action( 'admin_head', 'ppa_admin_output_buffer_start', 1 );
}

if ( ! function_exists( 'ppa_admin_output_buffer_end' ) ) {
	/**
	 * End buffering and clean the buffer, removing the legacy preview pane div if present.
	 */
	function ppa_admin_output_buffer_end() { // CHANGED:
		if ( ! is_admin() ) {
			return;
		}
		if ( ! function_exists( 'get_current_screen' ) ) {
			return;
		}
		$screen = get_current_screen();
		if ( ! ( $screen && isset( $screen->id ) && 'toplevel_page_postpress-ai' === $screen->id ) ) {
			return;
		}

		// Only process if a buffer exists
		if ( ob_get_level() > 0 ) {
			$contents = @ob_get_clean();
			if ( $contents === false ) {
				// nothing to do
				return;
			}

			// CHANGED: remove any <div id="ppa-preview-pane" ...>...</div> blocks (DOTALL, case-insensitive)
			$pattern = '/<div\\s+id=(["\\\'])ppa-preview-pane\\1[\\s\\S]*?<\\/div>\\s*/is';
			$cleaned = preg_replace( $pattern, '', $contents );

			if ( $cleaned === null ) {
				// preg_replace error; log and output original
				if ( function_exists( 'error_log' ) ) {
					error_log( 'PPA: preg_replace returned null while cleaning output (ppa-preview-pane). Sending original buffer.' ); // CHANGED:
				}
				echo $contents;
			} else {
				if ( function_exists( 'error_log' ) ) {
					// log if we actually removed something (heuristic)
					if ( $cleaned !== $contents ) {
						error_log( 'PPA: stripped legacy #ppa-preview-pane from admin output for postpress-ai page' ); // CHANGED:
					}
				}
				echo $cleaned;
			}
		}
	}
	// Run late in the footer after most output is printed
	add_action( 'admin_footer', 'ppa_admin_output_buffer_end', 9999 );
}

// CHANGED: server-side load log
if ( function_exists( 'error_log' ) ) {
	error_log( 'PPA: composer.php v2025-10-20 loaded' ); // CHANGED:
}

/**
 * Ensure admin menu registration exists (keeps page discoverable).
 */
if ( ! function_exists( 'ppa_register_admin_menu_if_missing' ) ) {
	function ppa_register_admin_menu_if_missing() {
		$cap = apply_filters( 'ppa_admin_capability', 'edit_posts' ); // CHANGED:
		add_menu_page(
			'PostPress AI',
			'PostPress AI',
			$cap,
			'postpress-ai',
			'ppa_render_composer_page',
			'dashicons-edit',
			56
		);
		if ( function_exists( 'error_log' ) ) {
			error_log( 'PPA: admin_menu registered (cap:' . $cap . ')' ); // CHANGED:
		}
	}
	add_action( 'admin_menu', 'ppa_register_admin_menu_if_missing', 20 );
}

/**
 * Render composer page.
 */
function ppa_render_composer_page() { // CHANGED:
	$required_cap = apply_filters( 'ppa_admin_capability', 'edit_posts' ); // CHANGED:

	// friendly access denial
	if ( ! current_user_can( $required_cap ) ) {
		$user = wp_get_current_user();
		if ( function_exists( 'error_log' ) ) {
			error_log( 'PPA: composer access denied for user=' . intval( $user->ID ) . ' login=' . esc_html( $user->user_login ) . ' required_cap=' . $required_cap ); // CHANGED:
		}
		?>
		<div class="wrap">
			<h1>PostPress AI — Composer</h1>
			<div class="notice notice-error"><p><strong>Access denied.</strong> You need the <code><?php echo esc_html( $required_cap ); ?></code> capability to view this page.</p></div>
		</div>
		<?php
		return;
	}

	// standard nonce for AJAX/JS flows
	$nonce = wp_create_nonce( 'ppa_admin_nonce' ); // CHANGED:
	$ajax_url = admin_url( 'admin-ajax.php' );

	if ( function_exists( 'error_log' ) ) {
		error_log( 'PPA: rendering composer for user=' . get_current_user_id() ); // CHANGED:
	}
	?>
	<!-- Root wrapper (centered and constrained to match RIGHT.PNG) -->
	<div class="wrap ppa-composer-wrap" id="ppa-composer-root"
	     data-ajax="<?php echo esc_url( $ajax_url ); ?>"
	     data-nonce="<?php echo esc_attr( $nonce ); ?>"
	     style="max-width:1200px;margin:18px auto;padding:22px;border-radius:12px;box-sizing:border-box;">

		<header class="ppa-header" style="margin-bottom:18px;">
			<h1 class="ppa-title" style="margin:0 0 6px 0;">PostPress AI</h1>
			<p class="ppa-subhead" style="margin:0;color:rgba(255,255,255,0.65);">Compose a preview and save to WordPress. The preview appears on the right.</p>
		</header>

		<!-- NOTE: intentionally not rendering any top toolbar / external preview pane / global tabs injected elsewhere. -->
		<!-- Two-column layout -->
		<main class="ppa-grid" style="display:flex;gap:30px;align-items:flex-start;">

			<!-- LEFT: dominant form card (62%) -->
			<section class="ppa-form-panel" style="flex:0 0 62%;order:0;">
				<div class="ppa-card" style="padding:24px;">
					<h2 class="ppa-card-title" style="margin-top:0;">Compose</h2>

					<form id="ppa-composer-form" method="post" action="#" onsubmit="return false;">
						<input type="hidden" name="_wpnonce" value="<?php echo esc_attr( $nonce ); ?>" />
						<input type="hidden" name="ppa_action" value="compose" />

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-subject">Subject</label>
							<input id="ppa-subject" name="subject" type="text" class="ppa-input" placeholder="e.g., Improve website speed" style="width:100%;" />
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-genre">Content Type</label>
							<select id="ppa-genre" name="genre" class="ppa-select" style="width:100%;">
								<option value="howto">How-to</option>
								<option value="blog">Blog post</option>
								<option value="faq">FAQ</option>
								<option value="listicle">Listicle</option>
								<option value="product">Product description</option>
							</select>
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-tone">Tone</label>
							<select id="ppa-tone" name="tone" class="ppa-select" style="width:100%;">
								<option value="friendly">Friendly</option>
								<option value="casual">Casual</option>
								<option value="formal">Formal</option>
								<option value="sales">Persuasive</option>
								<option value="technical">Technical</option>
							</select>
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-audience">Target Audience</label>
							<input id="ppa-audience" name="audience" type="text" class="ppa-input" placeholder="e.g., small business owners in Iowa" style="width:100%;" />
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-keywords">Keywords</label>
							<input id="ppa-keywords" name="keywords" type="text" class="ppa-input" placeholder="AI, automation, seo" style="width:100%;" />
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-wordcount">Word Count</label>
							<input id="ppa-wordcount" name="word_count" type="number" min="50" max="5000" value="1200" class="ppa-input" style="width:120px;" />
						</div>

						<div class="ppa-field" style="margin:18px 0;">
							<label for="ppa-cta">Call to Action (optional)</label>
							<input id="ppa-cta" name="cta" type="text" class="ppa-input" placeholder="e.g., Grab a free consultation today" style="width:100%;" />
						</div>

						<div class="ppa-actions" style="margin-top:18px;display:flex;gap:10px;align-items:center;">
							<button id="ppa-preview-btn" class="ppa-btn ppa-btn-primary">Preview</button>
							<button id="ppa-save-btn" class="ppa-btn ppa-btn-secondary">Save as Draft</button>
							<?php if ( current_user_can( 'publish_posts' ) ) : // CHANGED: show Publish if allowed ?>
								<button id="ppa-publish-btn" class="ppa-btn ppa-btn-accent">Publish</button>
							<?php else : ?>
								<button id="ppa-publish-btn" class="ppa-btn ppa-btn-secondary" disabled title="Requires publish_posts capability">Publish</button>
							<?php endif; ?>
							<span id="ppa-status" class="ppa-status" aria-live="polite" style="margin-left:12px;"></span>
						</div>
					</form>
				</div>

				<!-- HISTORY (below form) -->
				<div id="ppa-history-panel" class="ppa-card ppa-hidden" aria-hidden="true" style="margin-top:18px;padding:18px;">
					<h3 class="ppa-card-title">History</h3>
					<div id="ppa-history-list">
						<p class="ppa-note">No history yet.</p>
					</div>
				</div>
			</section>

			<!-- RIGHT: preview (34%) -->
			<aside class="ppa-preview-panel" style="flex:0 0 34%;order:1;">
				<div class="ppa-card ppa-preview-card" style="padding:18px;">
					<h2 class="ppa-card-title">Preview</h2>
					<div id="ppa-preview-area" class="ppa-preview-area" aria-live="polite" style="min-height:320px;">
						<div class="ppa-preview-empty ppa-note">Preview will appear here after generating.</div>
					</div>
				</div>

				<div class="ppa-card ppa-keypoints" style="margin-top:16px;padding:18px;">
					<h4>Key Points</h4>
					<ul>
						<li>Introduce the topic clearly</li>
						<li>Explain benefits or insights</li>
						<li>Provide actionable steps</li>
					</ul>
				</div>
			</aside>
		</main>
	</div>

	<script type="text/javascript">
	/* Defensive DOM cleanup + minimal bootstrap */
	(function () {
		try {
			console.info('PPA: composer DOM rendered (defensive cleanup active)'); // CHANGED:

			// Defensive: remove stray legacy / duplicate elements that may be injected elsewhere.
			[
				'#ppa-preview-pane',
				'.ppa-composer-toolbar',
				'.ppa-toolbar-msg'
				// note: do not unconditionally remove .ppa-tabs here to avoid removing internal tabs inside our root
			].forEach(function(sel){
				var nodes = document.querySelectorAll(sel);
				nodes.forEach(function(node){
					// remove only if not a child of our root
					var root = document.getElementById('ppa-composer-root');
					if ( root && root.contains(node) ) {
						return;
					}
					try { node.parentNode && node.parentNode.removeChild(node); console.info('PPA: removed stray element', sel); }catch(e){}
				});
			});

			// expose runtime config for admin.js
			var root = document.getElementById('ppa-composer-root');
			if (root) {
				window.PPA = window.PPA || {};
				window.PPA.ajax_url = root.getAttribute('data-ajax');
				window.PPA.nonce = root.getAttribute('data-nonce');
				console.info('PPA: inline-config', window.PPA);
			}

			// Preview fallback (local)
			var previewBtn = document.getElementById('ppa-preview-btn');
			if (previewBtn) {
				previewBtn.addEventListener('click', function (e) {
					e.preventDefault();
					var subject = (document.getElementById('ppa-subject') && document.getElementById('ppa-subject').value) || 'Untitled';
					var area = document.getElementById('ppa-preview-area');
					if (area) {
						area.innerHTML = '<article class="ppa-generated"><h1>' + subject + '</h1><p class="ppa-note">Local preview (stub)</p></article>';
					}
				});
			}
		} catch (err) {
			console.info('PPA: composer bootstrap error', err);
		}
	})();
	</script>
	<?php
} // end function ppa_render_composer_page

// Final server-side mark
if ( function_exists( 'error_log' ) ) {
	error_log( 'PPA: composer.php render-ready' ); // CHANGED:
}

