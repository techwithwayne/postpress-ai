<?php
/**
 * Composer admin UI for PostPress AI
 *
 * CHANGE LOG
 * 2025-10-16 — Recreated composer.php to match original composer layout (top subject input, compose button, form-table fields, preview card).
 *
 * Rationale:
 * - The plugin bootstrap (postpress-ai.php) expects the composer page callback to be ppa_render_composer_page. See plugin bootstrap for reference. :contentReference[oaicite:1]{index=1}
 *
 * Notes:
 * - Scoped markup under .ppa-admin-wrapper so CSS can style without affecting other WP admin UI.
 * - Minimal inline JS to ensure debug logging in case admin.js isn't loaded yet.
 * - JS event handlers should be implemented in assets/js/admin.js (not modified here).
 */

// Prevent direct access
defined( 'ABSPATH' ) || exit;

// Simple debug at load time
if ( function_exists( 'error_log' ) ) {
    error_log( 'PPA: composer include loaded' ); // CHANGED: debug entry
}

/**
 * Render the composer admin page.
 *
 * Matches the callback name used in the plugin bootstrap (add_menu_page).
 */
function ppa_render_composer_page() { // CHANGED: ensure callback name matches bootstrap
    if ( ! current_user_can( 'manage_options' ) ) {
        // Show a permissive message but preserve WP UI style.
        wp_die( esc_html__( 'You do not have permissions to view this page', 'postpress-ai' ) );
    }

    // Basic variables
    $nonce_field = wp_create_nonce( 'ppa_admin_nonce' ); // CHANGED: created here for clarity (also localized via admin_enqueue)
    // Inline debug (server-side)
    if ( function_exists( 'error_log' ) ) {
        error_log( 'PPA: rendering composer page for user=' . get_current_user_id() ); // CHANGED: debug entry
    }
    ?>
    <div class="wrap ppa-admin-wrapper" id="ppa-admin-root">
        <h1 class="ppa-title">PostPress AI — Composer</h1>
        <p class="ppa-lead">Quickly draft posts using the AI composer. Use the preview and save flows to generate content.</p>

        <!-- Top large composer row (subject + compose preview) -->
        <div id="ppa-composer-top" class="ppa-top-input" style="margin-bottom: 18px;">
            <input id="ppa-top-subject" class="regular-text" type="text" placeholder="Subject (e.g. Improve website speed)" aria-label="composer subject" />
            <button id="ppa-compose-preview" class="button">Compose (Preview)</button>
        </div>

        <!-- Settings table (mirrors previous UI) -->
        <form id="ppa-composer-form" method="post" action="#" onsubmit="return false;">
            <input type="hidden" name="_ppa_nonce" value="<?php echo esc_attr( $nonce_field ); ?>" />
            <table class="form-table">
                <tbody>
                    <tr>
                        <th scope="row"><label for="ppa-subject">Subject</label></th>
                        <td>
                            <input id="ppa-subject" name="subject" type="text" class="regular-text" placeholder="Enter subject or headline" />
                            <p class="description">Enter a short subject or headline for the generated content.</p>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row"><label for="ppa-tone">Tone</label></th>
                        <td>
                            <select id="ppa-tone" name="tone">
                                <option value="default">Default</option>
                                <option value="casual">Casual</option>
                                <option value="professional">Professional</option>
                                <option value="sales">Sales / Persuasive</option>
                                <option value="friendly">Friendly</option>
                            </select>
                            <p class="description">Select the tone for the AI output.</p>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row"><label for="ppa-word-count">Word count</label></th>
                        <td>
                            <input id="ppa-word-count" name="word_count" type="number" min="50" max="2000" value="300" />
                            <p class="description">Approximate target word count for the draft.</p>
                        </td>
                    </tr>
                </tbody>
            </table>

            <p class="ppa-actions">
                <button id="ppa-preview-btn" class="button">Preview</button>
                <button id="ppa-save-draft-btn" class="button secondary">Save Draft</button>
                <span id="ppa-status" style="margin-left:12px;"></span>
            </p>
        </form>

        <!-- Preview card -->
        <div id="ppa-preview-area" aria-live="polite">
            <div class="ppa-note">Preview will appear here after generating.</div>
        </div>

        <!-- Small composer footer / controls -->
        <div style="margin-top:14px;" class="ppa-footer-note">
            <p class="ppa-note">Generated drafts are saved as drafts on your WordPress site when you press <strong>Save Draft</strong>. Use the top Compose (Preview) button for a quick single-click preview.</p>
        </div>
    </div>

    <script type="text/javascript">
    /* Minimal inline debug to ensure developers see when composer renders.
       Real event wiring belongs in assets/js/admin.js (this file should add listeners to the IDs above).
    */
    (function(){
        try {
            console.info('PPA: composer DOM rendered'); // CHANGED: JS debug
        } catch(e) {}
    })();
    </script>
    <?php
} // end function ppa_render_composer_page
